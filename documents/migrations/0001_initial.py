# Generated by Django 5.2 on 2025-05-05 14:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, default='')),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('phone', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(choices=[('PERSON', 'Per Person'), ('PACK', 'Per Pack'), ('TRAY', 'Per Tray'), ('ITEM', 'Per Item'), ('FIXED', 'Fixed Price'), ('DAY', 'Per Day'), ('EVENT', 'Per Event'), ('OTHER', 'Other')], default='ITEM', help_text='e.g., per person, per tray, per pack, fixed', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Is this item currently offered?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='Your Company Name', max_length=255)),
                ('address', models.TextField(blank=True, default='')),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('phone', models.CharField(blank=True, default='', max_length=50)),
                ('tax_id', models.CharField(blank=True, default='', max_length=100, verbose_name='Company Tax ID')),
                ('company_logo', models.ImageField(blank=True, help_text='Optional company logo.', null=True, upload_to='company_logos/')),
                ('currency_symbol', models.CharField(default='RM', max_length=5)),
                ('tax_enabled', models.BooleanField(default=False, verbose_name='Enable Tax/SST Calculation')),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('6.00'), help_text='Enter the rate as a percentage, e.g., 6.00 for 6%', max_digits=5, verbose_name='Tax/SST Rate (%)')),
                ('default_payment_details', models.TextField(blank=True, default='', help_text='Default payment info shown on invoices (e.g., Bank Details)')),
                ('default_terms_conditions', models.TextField(blank=True, default='', help_text='Default terms shown on quotes/invoices')),
                ('default_validity_days', models.PositiveIntegerField(default=15, help_text='Default number of days a quote/invoice is valid from the issue date.')),
                ('default_payment_terms_days', models.PositiveIntegerField(default=30, help_text='Default number of days until an invoice payment is due from the issue date.')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Application Setting',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True)),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('PART_PAID', 'Partially Paid'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=10)),
                ('discount_type', models.CharField(choices=[('NONE', 'No Discount'), ('PERCENT', 'Percentage (%)'), ('FIXED', 'Fixed Amount (RM)')], default='NONE', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Enter percentage (e.g., 10.00 for 10%) or fixed amount.', max_digits=10)),
                ('terms_and_conditions', models.TextField(blank=True, default='')),
                ('notes', models.TextField(blank=True, default='', help_text='Internal notes')),
                ('payment_details', models.TextField(blank=True, default='', help_text='Info like bank account, payment terms')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='documents.client')),
            ],
            options={
                'ordering': ['-issue_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='Defaults to menu item description, can be overridden.')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit for *this* invoice line.', max_digits=10)),
                ('grouping_label', models.CharField(blank=True, default='', max_length=100)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.invoice')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoice_items', to='documents.menuitem')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True)),
                ('title', models.CharField(blank=True, default='', help_text='e.g., Wedding Catering June 15th', max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Confirmation'), ('CONFIRMED', 'Confirmed'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='CONFIRMED', max_length=15)),
                ('event_date', models.DateField(blank=True, help_text='Primary date of the event/order', null=True)),
                ('delivery_address', models.TextField(blank=True, default='')),
                ('notes', models.TextField(blank=True, default='', help_text='Internal notes about the order/event')),
                ('discount_type', models.CharField(choices=[('NONE', 'No Discount'), ('PERCENT', 'Percentage (%)'), ('FIXED', 'Fixed Amount (RM)')], default='NONE', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Enter percentage (e.g., 10.00 for 10%) or fixed amount for overall order discount.', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='documents.client')),
            ],
            options={
                'ordering': ['-event_date', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='related_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to='documents.order'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='Specific details for this item on this order.')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit agreed for this order.', max_digits=10)),
                ('grouping_label', models.CharField(blank=True, default='', help_text="Optional label (e.g., 'Day 1 - Lunch')", max_length=100)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='documents.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.order')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(blank=True, choices=[('BANK', 'Bank Transfer'), ('CASH', 'Cash'), ('CHEQUE', 'Cheque'), ('CARD', 'Credit Card'), ('ONLINE', 'Online Payment Gateway'), ('OTHER', 'Other')], max_length=10, null=True)),
                ('reference_number', models.CharField(blank=True, default='', help_text='E.g., Transaction ID, Cheque No.', max_length=100)),
                ('notes', models.TextField(blank=True, default='', help_text='Internal notes about the payment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='documents.invoice')),
            ],
            options={
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation_number', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True)),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('SUPERSEDED', 'Superseded')], default='DRAFT', max_length=15)),
                ('version', models.PositiveIntegerField(default=1)),
                ('discount_type', models.CharField(choices=[('NONE', 'No Discount'), ('PERCENT', 'Percentage (%)'), ('FIXED', 'Fixed Amount (RM)')], default='NONE', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Enter percentage (e.g., 10.00 for 10%) or fixed amount.', max_digits=10)),
                ('terms_and_conditions', models.TextField(blank=True, default='')),
                ('notes', models.TextField(blank=True, default='', help_text='Internal notes, not shown to client')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotations', to='documents.client')),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='documents.quotation')),
            ],
            options={
                'ordering': ['-issue_date', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='related_quotation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='documents.quotation'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='related_quotation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_from_quote', to='documents.quotation'),
        ),
        migrations.CreateModel(
            name='QuotationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='Defaults to menu item description, can be overridden.')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit for *this* quote line.', max_digits=10)),
                ('grouping_label', models.CharField(blank=True, default='', help_text="Optional label to group items (e.g., 'Day 1 - Lunch')", max_length=100)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='quotation_items', to='documents.menuitem')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='documents.quotation')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
    ]
